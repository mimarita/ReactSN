{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Navbar/FriendsOnline/FriendsOnline.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Message/Message.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","assets/images/preloader.svg","components/common/Preloader/Preloader.js","hoc/withAuthRedirect.js","redux/dialog-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Music/Music.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","api/api.js","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Settings/Settings.jsx","redux/users-reducer.js","assets/images/user.jpg","components/Users/UsersSearch.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/auth-reducer.js","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Preloader","props","src","preloader","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","avatar","messages","message","newMessageBody","dialogReducer","action","type","body","DialogItem","path","className","s","dialog","active","alt","Message","Dialogs","dialogsPage","dialogsElements","map","d","messagesElements","m","dialogsItems","value","onChange","e","target","updateNewMessageBody","placeholder","onClick","sendMessage","compose","dispatch","updateNewMessageBodyCreator","Header","header","loginBlock","login","HeaderContainer","LoginForm","initialValues","email","password","validate","values","errors","test","onSubmit","setSubmitting","logInUser","isSubmitting","component","disabled","Login","formData","console","log","Music","Navbar","nav","item","activeClassName","activeLink","News","instance","axios","withCredentials","baseURL","headers","json","usersAPI","currentPage","pageSize","term","get","then","response","data","userId","post","delete","profileAPI","status","put","authAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","posts","likesCount","newPostText","profile","setStatus","profileReducer","newPost","newText","Post","MyPosts","postsElements","p","newPostElement","createRef","postsBlock","text","current","updateNewPostText","ref","addPost","MyPostsContainer","profilePage","updateNewPostTextActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","currentTarget","onBlur","updateStatus","ProfileInfo","descriptionBlock","photos","large","Profile","ProfileContainer","match","params","getUserProfile","getStatus","resultCode","withRouter","Settings","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","SET_FILTER","users","totalUsersCount","isFetching","followingInProgress","filter","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","usersReducer","u","followed","count","payload","usersSearchFormValidate","UsersSearchForm","onFilterChanged","Users","pagesCount","Math","ceil","pages","i","push","selectedPage","onPageChanged","UsersSearch","small","userPhoto","photo","some","unfollow","follow","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getFilter","UsersContainer","pageNumber","requestUsers","followSuccess","unfollowSuccess","page","setFilter","items","totalCount","SET_USER_DATA","getAuthUserData","setAuthUserData","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeApp","render","DialogsContainer","app","promise","Promise","all","friends","sideBarReducer","reducers","combineReducers","sideBar","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.7767601e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3q8JU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__367Jx\",\"selectedPage\":\"Users_selectedPage__1PEUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__30FP7\",\"dialogsItems\":\"Dialogs_dialogsItems__20c50\",\"active\":\"Dialogs_active__1T339\",\"dialog\":\"Dialogs_dialog__1RZm3\",\"messages\":\"Dialogs_messages__2fH9x\",\"message\":\"Dialogs_message__3ZhWC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"DialogItem_avatar__1tXd5\",\"dialogs\":\"DialogItem_dialogs__1cJzi\",\"dialogsItems\":\"DialogItem_dialogsItems__1TVT6\",\"active\":\"DialogItem_active__th4kp\",\"dialog\":\"DialogItem_dialog__2en8A\",\"messages\":\"DialogItem_messages__2FcYe\",\"message\":\"DialogItem_message__3Qhti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"FriendsOnline_avatar__21C9u\",\"name\":\"FriendsOnline_name__2nix-\",\"friends\":\"FriendsOnline_friends__UKWm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1yKGl\",\"loginBlock\":\"Header_loginBlock__21Z7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3ryI_\",\"posts\":\"MyPosts_posts__1s3BO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__2OpR5\",\"dialogsItems\":\"Message_dialogsItems__2bLcb\",\"active\":\"Message_active__3J1Og\",\"dialog\":\"Message_dialog__2VBgH\",\"messages\":\"Message_messages__3NQml\",\"message\":\"Message_message__aI2SM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Nn4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__JMMhd\",\"item\":\"Navbar_item__285Nu\",\"activeLink\":\"Navbar_activeLink__1tL85\",\"img\":\"Navbar_img__3kGpe\"};","export default __webpack_public_path__ + \"static/media/preloader.173e5ecc.svg\";","import preloader from '../../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\nreturn <div>\r\n    <img src={preloader}/>\r\n</div>\r\n}\r\nexport default Preloader;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState =  {\r\n    dialogs: [\r\n        { id: 1, name: 'Groot', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' },\r\n        { id: 2, name: 'Anthony Edward Stark', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' },\r\n        { id: 3, name: 'Wanda Maximoff', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' },\r\n        { id: 4, name: 'Loki Laufeyson', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' },\r\n        { id: 5, name: 'Robert Bruce Banner', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' },\r\n        { id: 6, name: 'Natasha Romanoff', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' }],\r\n    messages: [\r\n        { id: 1, message: '1qqq' },\r\n        { id: 2, message: '2qqq' },\r\n        { id: 3, message: '3qq' },\r\n        { id: 4, message: '4qqq' },\r\n        { id: 5, message: '5qqq' },\r\n    ],\r\n    newMessageBody: '',\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY: \r\n        return {\r\n            ...state,\r\n            newMessageBody: action.body\r\n        };\r\n        //это (выше) мы создаем объект stateCopy, но не даем ему имя, а прям сразу возвращаем\r\n     case SEND_MESSAGE: \r\n        let body = state.newMessageBody;\r\n        return {...state, \r\n            newMessageBody: '',\r\n            messages: [...state.messages, { id: 6, message: body }]\r\n        }; //это (выше) мы создаем объект stateCopy, но не даем ему имя, а прям сразу возвращаем\r\n        default:\r\n        return state;\r\n    }\r\n}\r\nexport const sendMessageCreator = () => ({\r\n    \r\n    type: 'SEND-MESSAGE'\r\n  })\r\nexport const updateNewMessageBodyCreator = (body) => \r\n({type: 'UPDATE-NEW-MESSAGE-BODY', body: body})\r\nexport default dialogReducer","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <div>\r\n            <img className={s.avatar} alt='ава' src={props.avatar}/>\r\n        <NavLink  to={path}>{props.name}</NavLink></div>\r\n    </div>\r\n}\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Message = (props) => {\r\n    let mesElement = React.createRef();\r\n\r\n    let addMes = () => {\r\n        let text = mesElement.current.value;\r\n        alert('заглушка')\r\n    }\r\n\r\n\r\n    return <div className={s.dialog}>{props.message}\r\n    <div>\r\n        \r\n    </div> </div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n  \r\nlet state = props.dialogsPage;\r\n\r\nlet dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id}  id={d.id} avatar={d.avatar}/>);\r\n\r\nlet messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\nlet newMessageBody = state.newMessageBody;\r\n\r\nlet onSendMessageClick = () => {\r\n  props.sendMessage();\r\n}\r\nlet onNewMessageChange = (e) => {\r\nlet body = e.target.value;\r\nprops.updateNewMessageBody(body);\r\n}\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n              {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n              <div>{messagesElements} </div>\r\n              <div><textarea value={newMessageBody} \r\n              onChange = {onNewMessageChange}\r\n              placeholder='Enter your message'/></div>\r\n              <div><button onClick = {onSendMessageClick}>Send</button></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialog-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewMessageBody: (body) => {\r\n      dispatch(updateNewMessageBodyCreator(body))\r\n    },\r\n    sendMessage: () => {\r\n      dispatch(sendMessageCreator())\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(connect (mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => { \r\n    \r\n    return <header className={s.header}>\r\n        <img src='https://www.xnview.com/img/app-xnsoft-360.png' />\r\n          \r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? props.login\r\n            : <NavLink to={'/login'} >Login</NavLink>}\r\n        </div>\r\n    </header>;\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n   \r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, {})(HeaderContainer);","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nconst LoginForm = (props) => {\r\n  \r\n  return (\r\n    <div>\r\n      <Formik\r\n       initialValues={{ email: '', password: '' }}\r\n       validate={values => {\r\n         const errors = {};\r\n         if (!values.email) {\r\n           errors.email = 'Required';\r\n         } else if (\r\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n         ) {\r\n           errors.email = 'Invalid email address';\r\n         }\r\n         return errors;\r\n       }}\r\n\r\n       onSubmit={(values, {props, setSubmitting }) => {\r\n         \r\n         props.logInUser(values)\r\n         setSubmitting(false);\r\n         }\r\n       }\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n           <div><Field type=\"email\" name=\"email\" component={'input'}/></div>\r\n           <div><ErrorMessage name=\"email\" component=\"div\" /></div>\r\n           <div><Field type=\"password\" name=\"password\" component={'input'}/></div>\r\n           <div><ErrorMessage name=\"password\" component=\"div\" /></div>\r\n           <div><Field type=\"checkbox\" name=\"rememberMe\" component={'input'}/> remember me</div>\r\n           <div><button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button></div>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { withFormik } from 'formik'\r\n\r\n\r\nconst Login = (props) => {\r\nconst onSubmit = (formData) => {\r\n    console.log(formData)\r\n}\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm logInUser={props.logInUser} onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n       <div>\r\n           Music\r\n       </div> \r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FriendsOnline from './FriendsOnline/FriendsOnline';\r\nimport s from './Navbar.module.css';\r\n\r\n\r\nconst Navbar = () => {\r\n   return <nav className={s.nav}>\r\n    <div className={s.item}>\r\n      <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to=\"dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to=\"news\" activeClassName={s.activeLink}>News</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to=\"music\" activeClassName={s.activeLink}>Music</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to=\"settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to=\"users\" activeClassName={s.activeLink}>Users</NavLink>\r\n    </div>\r\n  </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = (props) => {\r\n    return (\r\n       <div>\r\n           News\r\n       </div> \r\n    )\r\n}\r\n\r\nexport default News;","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"5a85c25d-56b3-4d6a-9a6b-301c9e06ab8d\"},\r\n    json: true,\r\n});\r\n\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10, term = '') {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}&term=${term}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    signIn({ email, password }) {\r\n        return instance.get(`auth/login`)\r\n        .then((response) => response.body)\r\n    },\r\n}\r\n","import { profileAPI } from \"../api/api\";\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 12 },\r\n        { id: 2, message: 'Its my first post', likesCount: 22 },\r\n        { id: 3, message: 'Test', likesCount: 421 },\r\n        { id: 4, message: 'Hi', likesCount: 1 },\r\n        { id: 5, message: 'Ou', likesCount: 41 },\r\n        { id: 6, message: '??', likesCount: 11 }\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status})\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    profileAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data))\r\n    });\r\n}\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId).then(response => {\r\n        dispatch(setStatus(response.data))\r\n    });\r\n}\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then(response => {\r\n        if (response.data.resultCode === 0){\r\n        dispatch(setStatus(status))\r\n    }\r\n    });\r\n}\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n  return (\r\n  <div className={s.item}>\r\n    <img src='https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg'/>;\r\n    {props.message}\r\n    <div>\r\n    <span>Like: </span>{props.likesCount}\r\n    </div>\r\n  </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map (p => <Post message={p.message} likesCount={p.likesCount} />);\r\n  let newPostElement = React.createRef ();\r\n\r\n  let onAddPost = () => {\r\n    props.addPost();\r\n  }\r\n\r\n  let onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText (text);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <div><textarea onChange = {onPostChange} ref={newPostElement} value={props.newPostText}/></div>\r\n        <div> <button onClick ={onAddPost}>Add post</button></div>\r\n      </div>\r\n      <div className={s.posts}>\r\n      {postsElements}\r\n\r\n      </div>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { \r\n    updateNewPostText: (text) => {\r\n      let action = updateNewPostTextActionCreator(text);\r\n      dispatch(action);\r\n    },\r\n    addPost: () => {\r\n    dispatch(addPostActionCreator())\r\n  }\r\n}\r\n}\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState ({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\nthis.setState({\r\n    status: e.currentTarget.value\r\n});\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n        this.setState({status: this.props.status})}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProfileStatus;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState (props.status)\r\n    \r\n    useEffect( ()  => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n    \r\n    const activateEditMode = () => {setEditMode(true);}\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n        }\r\n    const onStatusChange = (e) => {setStatus(e.currentTarget.value)}\r\n    \r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input  autoFocus={true}  \r\n                    onChange={onStatusChange}  \r\n                    onBlur={deactivateEditMode} \r\n                    value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <div><Preloader /></div>\r\n  }\r\n\r\n  return <div>\r\n{/* <div>\r\n      <img src=\"https://p.bigstockphoto.com/eIdTXLbqQilMs9xbjvcs_bigstock-Aerial-View-Of-Sandy-Beach-Wit-256330393.jpg\"></img>\r\n</div> */}\r\n    <div className={s.descriptionBlock}>\r\n      <img src={props.profile.photos.large} />\r\n           </div>\r\n           <div> <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/></div>\r\n  </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\nreturn  (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n    <MyPostsContainer />\r\n  </div>\r\n)\r\n}\r\nexport default Profile;","import Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {userId=17902};\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      \r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n})\r\n\r\n\r\n  export default compose(connect(mapStateToProps,\r\n    { getUserProfile, getStatus, updateStatus, }), withRouter, \r\n    // withAuthRedirect\r\n    )(ProfileContainer)","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n       <div>\r\n           Settings\r\n       </div> \r\n    )\r\n}\r\n\r\nexport default Settings;","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\nconst SET_FILTER = 'SET_FILTER';\r\n\r\n\r\nlet initialState = {\r\nusers: [ ],\r\npageSize: 100,\r\ntotalUsersCount: 0,\r\ncurrentPage: 1,\r\nisFetching: false, \r\nfollowingInProgress: [],\r\nfilter: {\r\n    term: '',\r\n}\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                }),\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                }),\r\n            }\r\n            \r\n            case SET_USERS: {\r\n                return {...state, users: action.users}\r\n            }\r\n            case SET_CURRENT_PAGE:{\r\n                return {...state, currentPage: action.currentPage}\r\n            }\r\n            case SET_TOTAL_COUNT:{\r\n                return {...state, totalUsersCount: action.count}\r\n            }\r\n            case TOGGLE_IS_FETCHING:{\r\n            return {...state, isFetching: action.isFetching}\r\n            }\r\n            case SET_FILTER:{\r\n            return {...state, filter: action.payload}\r\n            }\r\n            case  TOGGLE_IS_FOLLOWING_PROGRESS:{\r\n            return {...state, \r\n                followingInProgress: action.isFetching \r\n                ?  [...state.followingInProgress, action.userId] \r\n                : state.followingInProgress.filter(id=>id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// AC = action creator, то есть ниже написано followAC = follow action creator\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\nexport const setFilter = (term) => ({type: SET_FILTER, term});\r\n\r\n\r\nexport const requestUsers = (page, pageSize, term) => {\r\n return (dispatch) => {\r\n    dispatch(setFilter(term));\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    usersAPI.requestUsers (page, pageSize, term,).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        \r\n\r\n\r\n        });\r\n\r\n\r\n}}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        \r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n        .then(response => {\r\n                    if (response.data.resultCode == 0) {\r\n                        dispatch(followSuccess(userId));\r\n                    }\r\n                    dispatch(toggleFollowingInProgress(false, userId));\r\n                })\r\n   \r\n   \r\n   }}\r\n\r\n   export const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        \r\n        dispatch(toggleFollowingInProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n        .then(response => {\r\n                    if (response.data.resultCode == 0) {\r\n                        dispatch(unfollowSuccess(userId));\r\n                    }\r\n                    dispatch(toggleFollowingInProgress(false, userId));\r\n                })\r\n   \r\n   \r\n   }}\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/user.4e65a2e0.jpg\";","import s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg'\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Field, Form, Formik } from 'formik';\r\n\r\nconst usersSearchFormValidate = (values) => {\r\n    const errors = {};\r\n    return errors;\r\n  }\r\n\r\nconst UsersSearchForm = (props) => {\r\n    const submit = (values, { setSubmitting }) => {\r\n        props.onFilterChanged(values)\r\n        setSubmitting(false);\r\n      }\r\n    return (\r\n        <div>\r\n           <Formik\r\n       initialValues={{ term: ''}}\r\n       validate={usersSearchFormValidate}\r\n       onSubmit={submit}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n           <Field type=\"text\" name=\"term\" />\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Find\r\n           </button>\r\n         </Form>\r\n       )}\r\n     </Formik> \r\n        </div>\r\n    )\r\n       }\r\n\r\nexport default UsersSearchForm;","import s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg'\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport UsersSearchForm from './UsersSearch';\r\n\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return ( \r\n    <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && s.selectedPage}\r\n                    onClick={() => { props.onPageChanged(p); }}> {p} </span>\r\n            })}\r\n        </div>\r\n        <UsersSearchForm onFilterChanged={props.onFilterChanged} />\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span><div>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.photo} />\r\n                    </NavLink></div>\r\n                <div>\r\n                    {\r\n                        u.followed\r\n                            ? <button disabled={props.followingInProgress\r\n                                .some(id=>id===u.id)} onClick={() => {\r\n                                    props.unfollow(u.id)\r\n                                }} > Unfollow </button>\r\n                            : <button disabled={props.followingInProgress\r\n                                .some(id=>id===u.id)} onClick={() =>{\r\n                                    props.follow(u.id)\r\n                                }}> Follow </button>\r\n                                    }\r\n                </div> </div></span>\r\n            <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'u.location.planet'}</div>\r\n                    <div>{'u.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n    </div >)\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getFilter = (state) => {\r\n    return state.usersPage.filter\r\n}\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport { requestUsers, toggleFollowingInProgress, follow, setCurrentPage, unfollow } from \"../../redux/users-reducer\";\r\nimport React from 'react';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getCurrentPage, getFilter, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount,  getUsers,  } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize, '');\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize, '');\r\n    }\r\n    onFilterChanged = (filter) => {\r\n        this.props.requestUsers(1, this.props.pageSize, filter.term,);;\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                onFilterChanged={this.onFilterChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                \r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        filter: getFilter(state),\r\n    }\r\n};\r\n\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps,\r\n    { follow, unfollow, setCurrentPage,\r\n        toggleFollowingInProgress, requestUsers,}))\r\n        (UsersContainer);","import { authAPI } from \"../api/api\";\r\n\r\n//login\r\nconst SET_USER_DATA = 'SET_USER_SET_USER_DATA';\r\nconst LOGIN_SUCCEEDED = 'LOGIN_SUCCEEDED';\r\nconst LOGIN_REQUESTED = 'LOGIN_REQUESTED';\r\nconst LOGIN_FAILED = 'LOGIN_FAILED';\r\n//final login\r\n\r\nlet initialState = {\r\nuserId: null,\r\nemail: null,\r\nlogin: null,\r\nisAuth: false,\r\n};\r\n\r\n//login\r\nexport function loginSucceeded(user) {\r\n    return {\r\n      type: 'LOGIN_SUCCEEDED',\r\n      user\r\n    }\r\n  }\r\n  \r\n  export function requestLogin(user) {\r\n    return {\r\n      type: 'LOGIN_REQUESTED',\r\n      user\r\n    }\r\n  }\r\n  \r\n  export function loginFailed(user) {\r\n    return {\r\n      type: 'LOGIN_FAILED',\r\n      user\r\n    }\r\n  }\r\n  \r\n  export const logInUser = (user) => {\r\n    return (dispatch) => {\r\n      dispatch(LOGIN_REQUESTED(user))\r\n      return authAPI.signIn(user)\r\n        .then((response) => {\r\n          dispatch(LOGIN_SUCCEEDED(response))\r\n           return response\r\n        })\r\n        .catch((err) =>{\r\n          dispatch(LOGIN_FAILED(user))\r\n      })\r\n    }\r\n  }\r\n\r\n//final login\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n         \r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}});\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return (\r\n    authAPI.me().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login));\r\n            }\r\n\r\n        }))\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from './auth-reducer'\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\ninitialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n         \r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const setInitializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\nlet promise = dispatch(getAuthUserData() )\r\nPromise.all([promise]).then(() => {dispatch(setInitializedSuccess())\r\n} )\r\n}\r\n\r\n\r\nexport default appReducer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport './App.css';\nimport Preloader from './components/common/Preloader/Preloader';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login'\nimport Music from './components/Music/Music';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport {initializeApp } from './redux/app-reducer'\n\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.initializeApp();\n}\nrender () {\n  if (!this.props.initialized) {return <Preloader />}\n  return (\n\n    <div className='app-wrapper'>\n      <HeaderContainer />\n      <Navbar />\n      <div className='app-wrapper-content'>\n        <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n        <Route path='/dialogs' render={() => <DialogsContainer />} />\n        <Route path='/news' render={() => <News />} />\n        <Route path='/music' render={() => <Music />} />\n        <Route path='/settings' render={() => <Settings />} />\n        <Route path='/users' render={() => <UsersContainer />} />\n        <Route path='/login' render={() => <Login />} />\n      </div>\n    </div>\n  )\n}}\nconst mapStateToProps = (state) => (\n  {\n    initialized: state.app.initialized\n  }\n)\nexport default compose(\nwithRouter, connect (mapStateToProps, { initializeApp}))(App);\n","let initialState = {\r\n    friends: [\r\n        { id: 1, name: 'Vagrid', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' },\r\n        { id: 2, name: 'Era', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' },\r\n        { id: 3, name: 'Ika', avatar: 'https://animeslayers.ru/wp-content/uploads/2018/12/dlyasteam4.jpg' },\r\n    ]\r\n}\r\n\r\nconst sideBarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sideBarReducer","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport profileReducer from './profile-reducer';\r\nimport dialogReducer from './dialog-reducer';\r\nimport sideBarReducer from './sidebar-reducer';\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers ({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    sideBar: sideBarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n\r\n});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware) , );\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n<BrowserRouter basename={process.env.PUBLIC_URL}>\n<Provider store={store}>\n<App />\n</Provider>\n</BrowserRouter>, document.getElementById('root'))\n\n\n\n"],"sourceRoot":""}